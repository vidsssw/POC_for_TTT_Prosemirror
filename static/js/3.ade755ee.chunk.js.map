{"version":3,"sources":["../node_modules/prosemirror-dev-tools/dist/esm/state/idle-scheduler.js","../node_modules/jsondiffpatch/dist/jsondiffpatch.umd.js","../node_modules/prosemirror-dev-tools/dist/esm/state/json-diff-main.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","IdleScheduler","obj","value","instance","Constructor","TypeError","_classCallCheck","this","undefined","protoProps","staticProps","cancel","request","window","requestIdleCallback","requestAnimationFrame","Promise","resolve","cancelIdleCallack","cancelAnimationFrame","task","prototype","exports","chalk","hasOwnProperty","_typeof","Symbol","iterator","constructor","classCallCheck","createClass","defineProperties","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","call","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","toConsumableArray","arr2","from","Processor","options","selfOptions","pipes","_options","name","pipeArg","pipe","processor","input","context","nextPipe","lastPipe","lastContext","nextAfterChildren","process","hasResult","result","Pipe","filters","Error","debug","index","filter","log","filterName","exiting","resultCheck","msg","console","_filters","apply","arguments","_filters2","unshift","map","f","indexOf","params","slice","splice","should","error","noResult","Context","child","childName","root","children","a","clone","arg","Date","getTime","RegExp","re","regexMatch","exec","toString","cloneRegExp","cloned","DiffContext","_Context","left","right","_this","cloneDiffValues","clone$$1","setResult","PatchContext","delta","ReverseContext","isArray$1","diffFilter","leftType","rightType","leftIsArray","rightIsArray","exit","patchFilter","nested","regexArgs","reverseFilter","collectChildrenDiffFilter","_t","objectsDiffFilter","propertyFilter","patchFilter$1","collectChildrenPatchFilter","reverseFilter$1","collectChildrenReverseFilter","defaultMatch","array1","array2","index1","index2","lcs","match","innerContext","matrix","subsequence","sequence","indices1","indices2","backtrack","len1","len2","x","y","Math","max","lengthMatrix","join","isArray$2","arrayIndexOf","array","item","matchItems","value1","value2","objectHash","matchByPosition","hash1","hash2","hashCache1","hashCache2","diffFilter$1","matchContext","commonHead","commonTail","val1","val2","arraysHaveMatchByRef","trimmed1","trimmed2","seq","removedItems","detectMove","arrays","includeValueOnMove","removedItemsLength","indexOnArray2","isMove","removeItemIndex1","compare","b","patchFilter$2","toRemove","toInsert","toModify","parseInt","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","collectChildrenPatchFilter$1","reverseFilter$2","newName","substr","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","collectChildrenReverseFilter$1","diffFilter$2","diffMatchPatch","fn","module","createCommonjsModule","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","j","pop","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","d","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","text","chars","lineStart","lineEnd","lineArrayLength","line","String","fromCharCode","charCodeAt","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","html","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","replace","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","data","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","split","param","decodeURI","ex","n","isNaN","match_main","match_bitap_","s","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","start","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","empty","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","m","sign","cachedDiffPatch","getDiffMatchPatch","required","diff_match_patch_not_found","diff","txt1","txt2","_patch","textPatchFailed","diffFilter$3","minLength","textDiff","diffMatchPatch$$1","patchFilter$3","textDeltaReverse","l","lines","lineTmp","header","headerRegex","reverseFilter$3","DiffPatcher","append","shouldHaveResult","_processor","reverse","isArray$3","getObjectKeys","keys","names","arrayKeyToSortNumber","arrayKeyComparer","key1","key2","BaseFormatter","prepareContext","recurse","finalize","buffer","out","_buffer","deltaType","_ref","leftKey","movedFrom","isLast","leftValue","type","getDeltaType","nodeType","nodeBegin","rootBegin","typeFormattterNotFound","typeFormattterErrorFormatter","stack","nodeEnd","rootEnd","forEachDeltaKey","str","arrayKeys","moveDestinations","includeMoveDestinations","output","lineOutput","pieces","location","chr","pieceIndex","piecesLength","piece","pieceOutput","base","freeze","default","HtmlFormatter","_BaseFormatter","htmlEscape","JSON","stringify","parseTextDiff","nodeClass","hasArrows","adjustArrows","formatValue","formatDeltaChildren","formatTextDiffString","replacements","nodeArg","node","document","el","query","elems","querySelectorAll","eachByQuery","_ref3","parentNode","style","arrowParent","svg","path","display","destination","textContent","innerText","getElementText","querySelector","container","destinationElem","_ref2","eachChildren","getAttribute","distance","offsetTop","setAttribute","top","curve","round","showUnchanged","show","delay","body","classes","showing","hiding","visible","hidden","list","classList","remove","add","setTimeout","intervalId","setInterval","clearInterval","defaultInstance","hideUnchanged","format","AnnotatedFormatter","indent","levels","indentLevel","indentPad","row","json","htmlNote","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","deleted","moved","textdiff","formatAnyChange","annotator","format_added","format_modified","format_deleted","format_moved","format_textdiff","defaultInstance$1","annotated","OPERATIONS","JSONFormatter","pushCurrentOp","val","currentPath","pushMoveOp","to","toPath","last","opsByDescendingOrder","removeOps","pred","splitA","splitB","indexA","indexB","lastA","lastB","compareByIndexDesc","partitionOps","fns","initArr","fill","position","reduce","acc","isMoveOp","isRemoveOp","_ref4","defaultInstance$2","format$2","_partitionOps","_partitionOps2","moveOps","removedOps","restOps","removeOpsReverse","reorderOps","jsonpatch","chalkColor","_len","args","_key","colors","movedestination","unchanged","textDiffLine","ConsoleFormatter","outLine","_len2","_key2","color","pushColor","popColor","defaultInstance$3","format$3","console$1","defaultInstance$4","formatters","dateReviver","parts","UTC","unpatch","factory","require","asyncGeneratorStep","gen","reject","_next","_throw","info","then","_defineProperty","JsonDiffMain","_diff","_regeneratorRuntime","mark","_callee","wrap","_context","prev","scheduler","abrupt","id","diffPatcher","stop","_x"],"mappings":"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","file":"static/js/3.ade755ee.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var IdleScheduler = /*#__PURE__*/function () {\n  function IdleScheduler() {\n    _classCallCheck(this, IdleScheduler);\n\n    _defineProperty(this, \"task\", undefined);\n  }\n\n  _createClass(IdleScheduler, [{\n    key: \"request\",\n    value: function request() {\n      this.cancel();\n      var request = window.requestIdleCallback || window.requestAnimationFrame;\n      return new Promise(function (resolve) {\n        return request(resolve);\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var cancel = window.cancelIdleCallack || window.cancelAnimationFrame;\n\n      if (this.task) {\n        cancel(this.task);\n      }\n    }\n  }]);\n\n  return IdleScheduler;\n}();","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('./empty')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', './empty'], factory) :\n\t(factory((global.jsondiffpatch = {}),global.chalk));\n}(this, (function (exports,chalk) { 'use strict';\n\nchalk = chalk && chalk.hasOwnProperty('default') ? chalk['default'] : chalk;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Processor = function () {\n  function Processor(options) {\n    classCallCheck(this, Processor);\n\n    this.selfOptions = options || {};\n    this.pipes = {};\n  }\n\n  createClass(Processor, [{\n    key: 'options',\n    value: function options(_options) {\n      if (_options) {\n        this.selfOptions = _options;\n      }\n      return this.selfOptions;\n    }\n  }, {\n    key: 'pipe',\n    value: function pipe(name, pipeArg) {\n      var pipe = pipeArg;\n      if (typeof name === 'string') {\n        if (typeof pipe === 'undefined') {\n          return this.pipes[name];\n        } else {\n          this.pipes[name] = pipe;\n        }\n      }\n      if (name && name.name) {\n        pipe = name;\n        if (pipe.processor === this) {\n          return pipe;\n        }\n        this.pipes[pipe.name] = pipe;\n      }\n      pipe.processor = this;\n      return pipe;\n    }\n  }, {\n    key: 'process',\n    value: function process(input, pipe) {\n      var context = input;\n      context.options = this.options();\n      var nextPipe = pipe || input.pipe || 'default';\n      var lastPipe = void 0;\n      var lastContext = void 0;\n      while (nextPipe) {\n        if (typeof context.nextAfterChildren !== 'undefined') {\n          // children processed and coming back to parent\n          context.next = context.nextAfterChildren;\n          context.nextAfterChildren = null;\n        }\n\n        if (typeof nextPipe === 'string') {\n          nextPipe = this.pipe(nextPipe);\n        }\n        nextPipe.process(context);\n        lastContext = context;\n        lastPipe = nextPipe;\n        nextPipe = null;\n        if (context) {\n          if (context.next) {\n            context = context.next;\n            nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n          }\n        }\n      }\n      return context.hasResult ? context.result : undefined;\n    }\n  }]);\n  return Processor;\n}();\n\nvar Pipe = function () {\n  function Pipe(name) {\n    classCallCheck(this, Pipe);\n\n    this.name = name;\n    this.filters = [];\n  }\n\n  createClass(Pipe, [{\n    key: 'process',\n    value: function process(input) {\n      if (!this.processor) {\n        throw new Error('add this pipe to a processor before using it');\n      }\n      var debug = this.debug;\n      var length = this.filters.length;\n      var context = input;\n      for (var index = 0; index < length; index++) {\n        var filter = this.filters[index];\n        if (debug) {\n          this.log('filter: ' + filter.filterName);\n        }\n        filter(context);\n        if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' && context.exiting) {\n          context.exiting = false;\n          break;\n        }\n      }\n      if (!context.next && this.resultCheck) {\n        this.resultCheck(context);\n      }\n    }\n  }, {\n    key: 'log',\n    value: function log(msg) {\n      console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n    }\n  }, {\n    key: 'append',\n    value: function append() {\n      var _filters;\n\n      (_filters = this.filters).push.apply(_filters, arguments);\n      return this;\n    }\n  }, {\n    key: 'prepend',\n    value: function prepend() {\n      var _filters2;\n\n      (_filters2 = this.filters).unshift.apply(_filters2, arguments);\n      return this;\n    }\n  }, {\n    key: 'indexOf',\n    value: function indexOf(filterName) {\n      if (!filterName) {\n        throw new Error('a filter name is required');\n      }\n      for (var index = 0; index < this.filters.length; index++) {\n        var filter = this.filters[index];\n        if (filter.filterName === filterName) {\n          return index;\n        }\n      }\n      throw new Error('filter not found: ' + filterName);\n    }\n  }, {\n    key: 'list',\n    value: function list() {\n      return this.filters.map(function (f) {\n        return f.filterName;\n      });\n    }\n  }, {\n    key: 'after',\n    value: function after(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index + 1, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'before',\n    value: function before(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'replace',\n    value: function replace(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 1);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(filterName) {\n      var index = this.indexOf(filterName);\n      this.filters.splice(index, 1);\n      return this;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.filters.length = 0;\n      return this;\n    }\n  }, {\n    key: 'shouldHaveResult',\n    value: function shouldHaveResult(should) {\n      if (should === false) {\n        this.resultCheck = null;\n        return;\n      }\n      if (this.resultCheck) {\n        return;\n      }\n      var pipe = this;\n      this.resultCheck = function (context) {\n        if (!context.hasResult) {\n          console.log(context);\n          var error = new Error(pipe.name + ' failed');\n          error.noResult = true;\n          throw error;\n        }\n      };\n      return this;\n    }\n  }]);\n  return Pipe;\n}();\n\nvar Context = function () {\n  function Context() {\n    classCallCheck(this, Context);\n  }\n\n  createClass(Context, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      this.result = result;\n      this.hasResult = true;\n      return this;\n    }\n  }, {\n    key: 'exit',\n    value: function exit() {\n      this.exiting = true;\n      return this;\n    }\n  }, {\n    key: 'switchTo',\n    value: function switchTo(next, pipe) {\n      if (typeof next === 'string' || next instanceof Pipe) {\n        this.nextPipe = next;\n      } else {\n        this.next = next;\n        if (pipe) {\n          this.nextPipe = pipe;\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'push',\n    value: function push(child, name) {\n      child.parent = this;\n      if (typeof name !== 'undefined') {\n        child.childName = name;\n      }\n      child.root = this.root || this;\n      child.options = child.options || this.options;\n      if (!this.children) {\n        this.children = [child];\n        this.nextAfterChildren = this.next || null;\n        this.next = child;\n      } else {\n        this.children[this.children.length - 1].next = child;\n        this.children.push(child);\n      }\n      child.next = this;\n      return this;\n    }\n  }]);\n  return Context;\n}();\n\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nfunction cloneRegExp(re) {\n  var regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nfunction clone(arg) {\n  if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  var cloned = {};\n  for (var name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      cloned[name] = clone(arg[name]);\n    }\n  }\n  return cloned;\n}\n\nvar DiffContext = function (_Context) {\n  inherits(DiffContext, _Context);\n\n  function DiffContext(left, right) {\n    classCallCheck(this, DiffContext);\n\n    var _this = possibleConstructorReturn(this, (DiffContext.__proto__ || Object.getPrototypeOf(DiffContext)).call(this));\n\n    _this.left = left;\n    _this.right = right;\n    _this.pipe = 'diff';\n    return _this;\n  }\n\n  createClass(DiffContext, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      if (this.options.cloneDiffValues && (typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {\n        var clone$$1 = typeof this.options.cloneDiffValues === 'function' ? this.options.cloneDiffValues : clone;\n        if (_typeof(result[0]) === 'object') {\n          result[0] = clone$$1(result[0]);\n        }\n        if (_typeof(result[1]) === 'object') {\n          result[1] = clone$$1(result[1]);\n        }\n      }\n      return Context.prototype.setResult.apply(this, arguments);\n    }\n  }]);\n  return DiffContext;\n}(Context);\n\nvar PatchContext = function (_Context) {\n  inherits(PatchContext, _Context);\n\n  function PatchContext(left, delta) {\n    classCallCheck(this, PatchContext);\n\n    var _this = possibleConstructorReturn(this, (PatchContext.__proto__ || Object.getPrototypeOf(PatchContext)).call(this));\n\n    _this.left = left;\n    _this.delta = delta;\n    _this.pipe = 'patch';\n    return _this;\n  }\n\n  return PatchContext;\n}(Context);\n\nvar ReverseContext = function (_Context) {\n  inherits(ReverseContext, _Context);\n\n  function ReverseContext(delta) {\n    classCallCheck(this, ReverseContext);\n\n    var _this = possibleConstructorReturn(this, (ReverseContext.__proto__ || Object.getPrototypeOf(ReverseContext)).call(this));\n\n    _this.delta = delta;\n    _this.pipe = 'reverse';\n    return _this;\n  }\n\n  return ReverseContext;\n}(Context);\n\nvar isArray$1 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (typeof context.left === 'function' || typeof context.right === 'function') {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : _typeof(context.left);\n  context.rightType = context.right === null ? 'null' : _typeof(context.right);\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray$1(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray$1(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n\n  if (context.left instanceof RegExp) {\n    if (context.right instanceof RegExp) {\n      context.setResult([context.left.toString(), context.right.toString()]).exit();\n    } else {\n      context.setResult([context.left, context.right]).exit();\n    }\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nvar patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    if (context.left instanceof RegExp) {\n      var regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n      if (regexArgs) {\n        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n        return;\n      }\n    }\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n  }\n};\npatchFilter.filterName = 'trivial';\n\nvar reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n  }\n};\nreverseFilter.filterName = 'trivial';\n\nfunction collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var result = context.result;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n}\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nfunction objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  var name = void 0;\n  var child = void 0;\n  var propertyFilter = context.options.propertyFilter;\n  for (name in context.left) {\n    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n}\nobjectsDiffFilter.filterName = 'objects';\n\nvar patchFilter$1 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter$1.filterName = 'objects';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nvar reverseFilter$1 = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$1.filterName = 'objects';\n\nfunction collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {};\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n\n/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nvar defaultMatch = function defaultMatch(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nvar lengthMatrix = function lengthMatrix(array1, array2, match, context) {\n  var len1 = array1.length;\n  var len2 = array2.length;\n  var x = void 0,\n      y = void 0;\n\n  // initialize empty matrix of len1+1 x len2+1\n  var matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nvar backtrack = function backtrack(matrix, array1, array2, context) {\n  var index1 = array1.length;\n  var index2 = array2.length;\n  var subsequence = {\n    sequence: [],\n    indices1: [],\n    indices2: []\n  };\n\n  while (index1 !== 0 && index2 !== 0) {\n    var sameLetter = matrix.match(array1, array2, index1 - 1, index2 - 1, context);\n    if (sameLetter) {\n      subsequence.sequence.unshift(array1[index1 - 1]);\n      subsequence.indices1.unshift(index1 - 1);\n      subsequence.indices2.unshift(index2 - 1);\n      --index1;\n      --index2;\n    } else {\n      var valueAtMatrixAbove = matrix[index1][index2 - 1];\n      var valueAtMatrixLeft = matrix[index1 - 1][index2];\n      if (valueAtMatrixAbove > valueAtMatrixLeft) {\n        --index2;\n      } else {\n        --index1;\n      }\n    }\n  }\n  return subsequence;\n};\n\nvar get$1 = function get(array1, array2, match, context) {\n  var innerContext = context || {};\n  var matrix = lengthMatrix(array1, array2, match || defaultMatch, innerContext);\n  var result = backtrack(matrix, array1, array2, innerContext);\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nvar lcs = {\n  get: get$1\n};\n\nvar ARRAY_MOVE = 3;\n\nvar isArray$2 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ? function (array, item) {\n  return array.indexOf(item);\n} : function (array, item) {\n  var length = array.length;\n  for (var i = 0; i < length; i++) {\n    if (array[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (var index1 = 0; index1 < len1; index1++) {\n    var val1 = array1[index1];\n    for (var index2 = 0; index2 < len2; index2++) {\n      var val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  var value1 = array1[index1];\n  var value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if ((typeof value1 === 'undefined' ? 'undefined' : _typeof(value1)) !== 'object' || (typeof value2 === 'undefined' ? 'undefined' : _typeof(value2)) !== 'object') {\n    return false;\n  }\n  var objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  var hash1 = void 0;\n  var hash2 = void 0;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nvar diffFilter$1 = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  var matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition\n  };\n  var commonHead = 0;\n  var commonTail = 0;\n  var index = void 0;\n  var index1 = void 0;\n  var index2 = void 0;\n  var array1 = context.left;\n  var array2 = context.right;\n  var len1 = array1.length;\n  var len2 = array2.length;\n\n  var child = void 0;\n\n  if (len1 > 0 && len2 > 0 && !matchContext.objectHash && typeof matchContext.matchByPosition !== 'boolean') {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n  }\n\n  // separate common head\n  while (commonHead < len1 && commonHead < len2 && matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 && matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  var result = void 0;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result['_' + index] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  var seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);\n  var removedItems = [];\n  result = result || {\n    _t: 'a'\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result['_' + index] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  var detectMove = true;\n  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n    detectMove = false;\n  }\n  var includeValueOnMove = false;\n  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n    includeValueOnMove = true;\n  }\n\n  var removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      var isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n          index1 = removedItems[removeItemIndex1];\n          if (matchItems(trimmed1, trimmed2, index1 - commonHead, index - commonHead, matchContext)) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result['_' + index1][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(context.left[index1], context.right[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n};\ndiffFilter$1.filterName = 'arrays';\n\nvar compare = {\n  numerically: function numerically(a, b) {\n    return a - b;\n  },\n  numericallyBy: function numericallyBy(name) {\n    return function (a, b) {\n      return a[name] - b[name];\n    };\n  }\n};\n\nvar patchFilter$2 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var index = void 0;\n  var index1 = void 0;\n\n  var delta = context.delta;\n  var array = context.left;\n\n  // first, separate removals, insertions and modifications\n  var toRemove = [];\n  var toInsert = [];\n  var toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error('only removal or move can be applied at original array indices,' + (' invalid diff type: ' + delta[index][2]));\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0]\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index]\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    var indexDiff = delta['_' + index1];\n    var removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  var toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    var insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  var toModifyLength = toModify.length;\n  var child = void 0;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      var modification = toModify[index];\n      child = new PatchContext(context.left[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter$2.filterName = 'arrays';\n\nvar collectChildrenPatchFilter$1 = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter$1.filterName = 'arraysCollectChildren';\n\nvar reverseFilter$2 = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = '_' + context.delta[1];\n      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$2.filterName = 'arrays';\n\nvar reverseArrayDeltaIndex = function reverseArrayDeltaIndex(delta, index, itemDelta) {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray$2(itemDelta) && itemDelta[2] === 0) {\n    return '_' + index;\n  }\n\n  var reverseIndex = +index;\n  for (var deltaIndex in delta) {\n    var deltaItem = delta[deltaIndex];\n    if (isArray$2(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        var moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nfunction collectChildrenReverseFilter$1(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {\n    _t: 'a'\n  };\n\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    var name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter$1.filterName = 'arraysCollectChildren';\n\nvar diffFilter$2 = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter$2.filterName = 'dates';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar diffMatchPatch = createCommonjsModule(function (module) {\n/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push([DIFF_EQUAL, precontext]);\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push([diff_type, diff_text]);\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diff_type, diff_text]);\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;\n});\n\n/* global diff_match_patch */\nvar TEXT_DIFF = 2;\nvar DEFAULT_MIN_LENGTH = 60;\nvar cachedDiffPatch = null;\n\nvar getDiffMatchPatch = function getDiffMatchPatch(required) {\n  /* jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    var instance = void 0;\n    /* eslint-disable camelcase, new-cap */\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance = typeof diff_match_patch === 'function' ? new diff_match_patch() : new diff_match_patch.diff_match_patch();\n    } else if (diffMatchPatch) {\n      try {\n        instance = diffMatchPatch && new diffMatchPatch();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    /* eslint-enable camelcase, new-cap */\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      var error = new Error('text diff_match_patch library not found');\n      // eslint-disable-next-line camelcase\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function diff(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function patch(txt1, _patch) {\n        var results = instance.patch_apply(instance.patch_fromText(_patch), txt1);\n        for (var i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            var _error = new Error('text patch failed');\n            _error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      }\n    };\n  }\n  return cachedDiffPatch;\n};\n\nvar diffFilter$3 = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  var minLength = context.options && context.options.textDiff && context.options.textDiff.minLength || DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength || context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  var diffMatchPatch$$1 = getDiffMatchPatch();\n  if (!diffMatchPatch$$1) {\n    // diff-match-patch library not available,\n    // fallback to regular string replace\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  var diff = diffMatchPatch$$1.diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter$3.filterName = 'texts';\n\nvar patchFilter$3 = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  var patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter$3.filterName = 'texts';\n\nvar textDeltaReverse = function textDeltaReverse(delta) {\n  var i = void 0;\n  var l = void 0;\n  var lines = void 0;\n  var line = void 0;\n  var lineTmp = void 0;\n  var header = null;\n  var headerRegex = /^@@ +-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/;\n  var lineHeader = void 0;\n  lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    var lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n\n      // fix header\n      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n    } else if (lineStart === '+') {\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nvar reverseFilter$3 = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter$3.filterName = 'texts';\n\nvar DiffPatcher = function () {\n  function DiffPatcher(options) {\n    classCallCheck(this, DiffPatcher);\n\n    this.processor = new Processor(options);\n    this.processor.pipe(new Pipe('diff').append(collectChildrenDiffFilter, diffFilter, diffFilter$2, diffFilter$3, objectsDiffFilter, diffFilter$1).shouldHaveResult());\n    this.processor.pipe(new Pipe('patch').append(collectChildrenPatchFilter, collectChildrenPatchFilter$1, patchFilter, patchFilter$3, patchFilter$1, patchFilter$2).shouldHaveResult());\n    this.processor.pipe(new Pipe('reverse').append(collectChildrenReverseFilter, collectChildrenReverseFilter$1, reverseFilter, reverseFilter$3, reverseFilter$1, reverseFilter$2).shouldHaveResult());\n  }\n\n  createClass(DiffPatcher, [{\n    key: 'options',\n    value: function options() {\n      var _processor;\n\n      return (_processor = this.processor).options.apply(_processor, arguments);\n    }\n  }, {\n    key: 'diff',\n    value: function diff(left, right) {\n      return this.processor.process(new DiffContext(left, right));\n    }\n  }, {\n    key: 'patch',\n    value: function patch(left, delta) {\n      return this.processor.process(new PatchContext(left, delta));\n    }\n  }, {\n    key: 'reverse',\n    value: function reverse(delta) {\n      return this.processor.process(new ReverseContext(delta));\n    }\n  }, {\n    key: 'unpatch',\n    value: function unpatch(right, delta) {\n      return this.patch(right, this.reverse(delta));\n    }\n  }, {\n    key: 'clone',\n    value: function clone$$1(value) {\n      return clone(value);\n    }\n  }]);\n  return DiffPatcher;\n}();\n\nvar isArray$3 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar getObjectKeys = typeof Object.keys === 'function' ? function (obj) {\n  return Object.keys(obj);\n} : function (obj) {\n  var names = [];\n  for (var property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      names.push(property);\n    }\n  }\n  return names;\n};\n\nvar trimUnderscore = function trimUnderscore(str) {\n  if (str.substr(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nvar arrayKeyToSortNumber = function arrayKeyToSortNumber(key) {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substr(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nvar arrayKeyComparer = function arrayKeyComparer(key1, key2) {\n  return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n};\n\nvar BaseFormatter = function () {\n  function BaseFormatter() {\n    classCallCheck(this, BaseFormatter);\n  }\n\n  createClass(BaseFormatter, [{\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return this.finalize(context);\n    }\n  }, {\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      context.buffer = [];\n      context.out = function () {\n        var _buffer;\n\n        (_buffer = this.buffer).push.apply(_buffer, arguments);\n      };\n    }\n  }, {\n    key: 'typeFormattterNotFound',\n    value: function typeFormattterNotFound(context, deltaType) {\n      throw new Error('cannot format delta type: ' + deltaType);\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      return err.toString();\n    }\n  }, {\n    key: 'finalize',\n    value: function finalize(_ref) {\n      var buffer = _ref.buffer;\n\n      if (isArray$3(buffer)) {\n        return buffer.join('');\n      }\n    }\n  }, {\n    key: 'recurse',\n    value: function recurse(context, delta, left, key, leftKey, movedFrom, isLast) {\n      var useMoveOriginHere = delta && movedFrom;\n      var leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n      if (typeof delta === 'undefined' && typeof key === 'undefined') {\n        return undefined;\n      }\n\n      var type = this.getDeltaType(delta, movedFrom);\n      var nodeType = type === 'node' ? delta._t === 'a' ? 'array' : 'object' : '';\n\n      if (typeof key !== 'undefined') {\n        this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootBegin(context, type, nodeType);\n      }\n\n      var typeFormattter = void 0;\n      try {\n        typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);\n        typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n      } catch (err) {\n        this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n        if (typeof console !== 'undefined' && console.error) {\n          console.error(err.stack);\n        }\n      }\n\n      if (typeof key !== 'undefined') {\n        this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootEnd(context, type, nodeType);\n      }\n    }\n  }, {\n    key: 'formatDeltaChildren',\n    value: function formatDeltaChildren(context, delta, left) {\n      var self = this;\n      this.forEachDeltaKey(delta, left, function (key, leftKey, movedFrom, isLast) {\n        self.recurse(context, delta[key], left ? left[leftKey] : undefined, key, leftKey, movedFrom, isLast);\n      });\n    }\n  }, {\n    key: 'forEachDeltaKey',\n    value: function forEachDeltaKey(delta, left, fn) {\n      var keys = getObjectKeys(delta);\n      var arrayKeys = delta._t === 'a';\n      var moveDestinations = {};\n      var name = void 0;\n      if (typeof left !== 'undefined') {\n        for (name in left) {\n          if (Object.prototype.hasOwnProperty.call(left, name)) {\n            if (typeof delta[name] === 'undefined' && (!arrayKeys || typeof delta['_' + name] === 'undefined')) {\n              keys.push(name);\n            }\n          }\n        }\n      }\n      // look for move destinations\n      for (name in delta) {\n        if (Object.prototype.hasOwnProperty.call(delta, name)) {\n          var value = delta[name];\n          if (isArray$3(value) && value[2] === 3) {\n            moveDestinations[value[1].toString()] = {\n              key: name,\n              value: left && left[parseInt(name.substr(1))]\n            };\n            if (this.includeMoveDestinations !== false) {\n              if (typeof left === 'undefined' && typeof delta[value[1]] === 'undefined') {\n                keys.push(value[1].toString());\n              }\n            }\n          }\n        }\n      }\n      if (arrayKeys) {\n        keys.sort(arrayKeyComparer);\n      } else {\n        keys.sort();\n      }\n      for (var index = 0, length = keys.length; index < length; index++) {\n        var key = keys[index];\n        if (arrayKeys && key === '_t') {\n          continue;\n        }\n        var leftKey = arrayKeys ? typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10) : key;\n        var isLast = index === length - 1;\n        fn(key, leftKey, moveDestinations[leftKey], isLast);\n      }\n    }\n  }, {\n    key: 'getDeltaType',\n    value: function getDeltaType(delta, movedFrom) {\n      if (typeof delta === 'undefined') {\n        if (typeof movedFrom !== 'undefined') {\n          return 'movedestination';\n        }\n        return 'unchanged';\n      }\n      if (isArray$3(delta)) {\n        if (delta.length === 1) {\n          return 'added';\n        }\n        if (delta.length === 2) {\n          return 'modified';\n        }\n        if (delta.length === 3 && delta[2] === 0) {\n          return 'deleted';\n        }\n        if (delta.length === 3 && delta[2] === 2) {\n          return 'textdiff';\n        }\n        if (delta.length === 3 && delta[2] === 3) {\n          return 'moved';\n        }\n      } else if ((typeof delta === 'undefined' ? 'undefined' : _typeof(delta)) === 'object') {\n        return 'node';\n      }\n      return 'unknown';\n    }\n  }, {\n    key: 'parseTextDiff',\n    value: function parseTextDiff(value) {\n      var output = [];\n      var lines = value.split('\\n@@ ');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var lineOutput = {\n          pieces: []\n        };\n        var location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n        lineOutput.location = {\n          line: location[0],\n          chr: location[1]\n        };\n        var pieces = line.split('\\n').slice(1);\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          if (!piece.length) {\n            continue;\n          }\n          var pieceOutput = {\n            type: 'context'\n          };\n          if (piece.substr(0, 1) === '+') {\n            pieceOutput.type = 'added';\n          } else if (piece.substr(0, 1) === '-') {\n            pieceOutput.type = 'deleted';\n          }\n          pieceOutput.text = piece.slice(1);\n          lineOutput.pieces.push(pieceOutput);\n        }\n        output.push(lineOutput);\n      }\n      return output;\n    }\n  }]);\n  return BaseFormatter;\n}();\n\n\n\nvar base = Object.freeze({\n\tdefault: BaseFormatter\n});\n\nvar HtmlFormatter = function (_BaseFormatter) {\n  inherits(HtmlFormatter, _BaseFormatter);\n\n  function HtmlFormatter() {\n    classCallCheck(this, HtmlFormatter);\n    return possibleConstructorReturn(this, (HtmlFormatter.__proto__ || Object.getPrototypeOf(HtmlFormatter)).apply(this, arguments));\n  }\n\n  createClass(HtmlFormatter, [{\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          /* global decodeURI */\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + htmlEscape(decodeURI(piece.text)) + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<div class=\"jsondiffpatch-delta ' + nodeClass + '\">');\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context) {\n      context.out('</div>' + (context.hasArrows ? '<script type=\"text/javascript\">setTimeout(' + (adjustArrows.toString() + ',10);</script>') : ''));\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<li class=\"' + nodeClass + '\" data-key=\"' + leftKey + '\">' + ('<div class=\"jsondiffpatch-property-name\">' + leftKey + '</div>'));\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context) {\n      context.out('</li>');\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      var nodeType = delta._t === 'a' ? 'array' : 'object';\n      context.out('<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '\">');\n      this.formatDeltaChildren(context, delta, left);\n      context.out('</ul>');\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n      this.formatValue(context, delta[1]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div><div class=\"jsondiffpatch-moved-destination\">' + delta[1] + '</div>');\n\n      // draw an SVG arrow from here to move destination\n      context.out(\n      /* jshint multistr: true */\n      '<div class=\"jsondiffpatch-arrow\" ' + 'style=\"position: relative; left: -34px;\">\\n          <svg width=\"30\" height=\"60\" ' + 'style=\"position: absolute; display: none;\">\\n          <defs>\\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\\n                 refx=\"2\" refy=\"4\"\\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\\n              </marker>\\n          </defs>\\n          <path d=\"M30,0 Q-10,25 26,50\"\\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ' + 'stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\\n          ></path>\\n          </svg>\\n      </div>');\n      context.hasArrows = true;\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatTextDiffString(context, delta[0]);\n      context.out('</div>');\n    }\n  }]);\n  return HtmlFormatter;\n}(BaseFormatter);\n\nfunction htmlEscape(text) {\n  var html = text;\n  var replacements = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/'/g, '&apos;'], [/\"/g, '&quot;']];\n  for (var i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nvar adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {\n  var node = nodeArg || document;\n  var getElementText = function getElementText(_ref) {\n    var textContent = _ref.textContent,\n        innerText = _ref.innerText;\n    return textContent || innerText;\n  };\n  var eachByQuery = function eachByQuery(el, query, fn) {\n    var elems = el.querySelectorAll(query);\n    for (var i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  var eachChildren = function eachChildren(_ref2, fn) {\n    var children = _ref2.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(node, '.jsondiffpatch-arrow', function (_ref3) {\n    var parentNode = _ref3.parentNode,\n        children = _ref3.children,\n        style = _ref3.style;\n\n    var arrowParent = parentNode;\n    var svg = children[0];\n    var path = svg.children[1];\n    svg.style.display = 'none';\n    var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n    var container = arrowParent.parentNode;\n    var destinationElem = void 0;\n    eachChildren(container, function (child) {\n      if (child.getAttribute('data-key') === destination) {\n        destinationElem = child;\n      }\n    });\n    if (!destinationElem) {\n      return;\n    }\n    try {\n      var distance = destinationElem.offsetTop - arrowParent.offsetTop;\n      svg.setAttribute('height', Math.abs(distance) + 6);\n      style.top = -8 + (distance > 0 ? 0 : distance) + 'px';\n      var curve = distance > 0 ? 'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) : 'M30,' + -distance + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';\n      path.setAttribute('d', curve);\n      svg.style.display = '';\n    } catch (err) {}\n  });\n};\n\n/* jshint camelcase: true */\n/* eslint-enable camelcase */\n\nvar showUnchanged = function showUnchanged(show, node, delay) {\n  var el = node || document.body;\n  var prefix = 'jsondiffpatch-unchanged-';\n  var classes = {\n    showing: prefix + 'showing',\n    hiding: prefix + 'hiding',\n    visible: prefix + 'visible',\n    hidden: prefix + 'hidden'\n  };\n  var list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(function () {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  var intervalId = setInterval(function () {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(function () {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(function () {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nvar hideUnchanged = function hideUnchanged(node, delay) {\n  return showUnchanged(false, node, delay);\n};\n\nvar defaultInstance = void 0;\n\nfunction format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n\n\n\nvar html = Object.freeze({\n\tshowUnchanged: showUnchanged,\n\thideUnchanged: hideUnchanged,\n\tdefault: HtmlFormatter,\n\tformat: format\n});\n\nvar AnnotatedFormatter = function (_BaseFormatter) {\n  inherits(AnnotatedFormatter, _BaseFormatter);\n\n  function AnnotatedFormatter() {\n    classCallCheck(this, AnnotatedFormatter);\n\n    var _this = possibleConstructorReturn(this, (AnnotatedFormatter.__proto__ || Object.getPrototypeOf(AnnotatedFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(AnnotatedFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(AnnotatedFormatter.prototype.__proto__ || Object.getPrototypeOf(AnnotatedFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n      };\n      context.row = function (json, htmlNote) {\n        context.out('<tr><td style=\"white-space: nowrap;\">' + '<pre class=\"jsondiffpatch-annotated-indent\"' + ' style=\"display: inline-block\">');\n        context.out(context.indentPad);\n        context.out('</pre><pre style=\"display: inline-block\">');\n        context.out(json);\n        context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n        context.out(htmlNote);\n        context.out('</div></td></tr>');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.row('', '<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + piece.text + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n      if (type === 'node') {\n        context.row('{');\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.row('}');\n      }\n      context.out('</table>');\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.row('&quot;' + key + '&quot;: {');\n      if (type === 'node') {\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n      }\n      context.row('}' + (isLast ? '' : ','));\n    }\n\n    /* jshint camelcase: false */\n\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }]);\n  return AnnotatedFormatter;\n}(BaseFormatter);\n\n/* eslint-enable camelcase */\n\nvar wrapPropertyName = function wrapPropertyName(name) {\n  return '<pre style=\"display:inline-block\">&quot;' + name + '&quot;</pre>';\n};\n\nvar deltaAnnotations = {\n  added: function added(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'new value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'insert at index ' + leftKey + formatLegend;\n    }\n    return 'add property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  modified: function modified(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'modify value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'modify at index ' + leftKey + formatLegend;\n    }\n    return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  deleted: function deleted(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'delete value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'remove index ' + leftKey + formatLegend;\n    }\n    return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  moved: function moved(delta, left, key, leftKey) {\n    return 'move from <span title=\"(position to remove at original state)\">' + ('index ' + leftKey + '</span> to <span title=\"(position to insert at final') + (' state)\">index ' + delta[1] + '</span>');\n  },\n  textdiff: function textdiff(delta, left, key, leftKey) {\n    var location = typeof leftKey === 'undefined' ? '' : typeof leftKey === 'number' ? ' at index ' + leftKey : ' at property ' + wrapPropertyName(leftKey);\n    return 'text diff' + location + ', format is <a href=\"https://code.google.com/' + 'p/google-diff-match-patch/wiki/Unidiff\">a variation of Unidiff</a>';\n  }\n};\n\nvar formatAnyChange = function formatAnyChange(context, delta) {\n  var deltaType = this.getDeltaType(delta);\n  var annotator = deltaAnnotations[deltaType];\n  var htmlNote = annotator && annotator.apply(annotator, Array.prototype.slice.call(arguments, 1));\n  var json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\n/* eslint-disable camelcase */\nAnnotatedFormatter.prototype.format_added = formatAnyChange;\nAnnotatedFormatter.prototype.format_modified = formatAnyChange;\nAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\nAnnotatedFormatter.prototype.format_moved = formatAnyChange;\nAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\nvar defaultInstance$1 = void 0;\n\nfunction format$1(delta, left) {\n  if (!defaultInstance$1) {\n    defaultInstance$1 = new AnnotatedFormatter();\n  }\n  return defaultInstance$1.format(delta, left);\n}\n\n\n\nvar annotated = Object.freeze({\n\tdefault: AnnotatedFormatter,\n\tformat: format$1\n});\n\nvar OPERATIONS = {\n  add: 'add',\n  remove: 'remove',\n  replace: 'replace',\n  move: 'move'\n};\n\nvar JSONFormatter = function (_BaseFormatter) {\n  inherits(JSONFormatter, _BaseFormatter);\n\n  function JSONFormatter() {\n    classCallCheck(this, JSONFormatter);\n\n    var _this = possibleConstructorReturn(this, (JSONFormatter.__proto__ || Object.getPrototypeOf(JSONFormatter)).call(this));\n\n    _this.includeMoveDestinations = true;\n    return _this;\n  }\n\n  createClass(JSONFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(JSONFormatter.prototype.__proto__ || Object.getPrototypeOf(JSONFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.result = [];\n      context.path = [];\n      context.pushCurrentOp = function (obj) {\n        var op = obj.op,\n            value = obj.value;\n\n        var val = {\n          op: op,\n          path: this.currentPath()\n        };\n        if (typeof value !== 'undefined') {\n          val.value = value;\n        }\n        this.result.push(val);\n      };\n\n      context.pushMoveOp = function (to) {\n        var from = this.currentPath();\n        this.result.push({\n          op: OPERATIONS.move,\n          from: from,\n          path: this.toPath(to)\n        });\n      };\n\n      context.currentPath = function () {\n        return '/' + this.path.join('/');\n      };\n\n      context.toPath = function (toPath) {\n        var to = this.path.slice();\n        to[to.length - 1] = toPath;\n        return '/' + to.join('/');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('[ERROR] ' + err);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin() {}\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd() {}\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(_ref, key, leftKey) {\n      var path = _ref.path;\n\n      path.push(leftKey);\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(_ref2) {\n      var path = _ref2.path;\n\n      path.pop();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.add, value: delta[0] });\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.replace, value: delta[1] });\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context) {\n      context.pushCurrentOp({ op: OPERATIONS.remove });\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      var to = delta[1];\n      context.pushMoveOp(to);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff() {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return context.result;\n    }\n  }]);\n  return JSONFormatter;\n}(BaseFormatter);\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n};\n\nvar sortBy = function sortBy(arr, pred) {\n  arr.sort(pred);\n  return arr;\n};\n\nvar compareByIndexDesc = function compareByIndexDesc(indexA, indexB) {\n  var lastA = parseInt(indexA, 10);\n  var lastB = parseInt(indexB, 10);\n  if (!(isNaN(lastA) || isNaN(lastB))) {\n    return lastB - lastA;\n  } else {\n    return 0;\n  }\n};\n\nvar opsByDescendingOrder = function opsByDescendingOrder(removeOps) {\n  return sortBy(removeOps, function (a, b) {\n    var splitA = a.path.split('/');\n    var splitB = b.path.split('/');\n    if (splitA.length !== splitB.length) {\n      return splitA.length - splitB.length;\n    } else {\n      return compareByIndexDesc(last(splitA), last(splitB));\n    }\n  });\n};\n\nvar partitionOps = function partitionOps(arr, fns) {\n  var initArr = Array(fns.length + 1).fill().map(function () {\n    return [];\n  });\n  return arr.map(function (item) {\n    var position = fns.map(function (fn) {\n      return fn(item);\n    }).indexOf(true);\n    if (position < 0) {\n      position = fns.length;\n    }\n    return { item: item, position: position };\n  }).reduce(function (acc, item) {\n    acc[item.position].push(item.item);\n    return acc;\n  }, initArr);\n};\nvar isMoveOp = function isMoveOp(_ref3) {\n  var op = _ref3.op;\n  return op === 'move';\n};\nvar isRemoveOp = function isRemoveOp(_ref4) {\n  var op = _ref4.op;\n  return op === 'remove';\n};\n\nvar reorderOps = function reorderOps(diff) {\n  var _partitionOps = partitionOps(diff, [isMoveOp, isRemoveOp]),\n      _partitionOps2 = slicedToArray(_partitionOps, 3),\n      moveOps = _partitionOps2[0],\n      removedOps = _partitionOps2[1],\n      restOps = _partitionOps2[2];\n\n  var removeOpsReverse = opsByDescendingOrder(removedOps);\n  return [].concat(toConsumableArray(removeOpsReverse), toConsumableArray(moveOps), toConsumableArray(restOps));\n};\n\nvar defaultInstance$2 = void 0;\n\nvar format$2 = function format(delta, left) {\n  if (!defaultInstance$2) {\n    defaultInstance$2 = new JSONFormatter();\n  }\n  return reorderOps(defaultInstance$2.format(delta, left));\n};\n\nvar log = function log(delta, left) {\n  console.log(format$2(delta, left));\n};\n\n\n\nvar jsonpatch = Object.freeze({\n\tdefault: JSONFormatter,\n\tpartitionOps: partitionOps,\n\tformat: format$2,\n\tlog: log\n});\n\nfunction chalkColor(name) {\n  return chalk && chalk[name] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args;\n  };\n}\n\nvar colors = {\n  added: chalkColor('green'),\n  deleted: chalkColor('red'),\n  movedestination: chalkColor('gray'),\n  moved: chalkColor('yellow'),\n  unchanged: chalkColor('gray'),\n  error: chalkColor('white.bgRed'),\n  textDiffLine: chalkColor('gray')\n};\n\nvar ConsoleFormatter = function (_BaseFormatter) {\n  inherits(ConsoleFormatter, _BaseFormatter);\n\n  function ConsoleFormatter() {\n    classCallCheck(this, ConsoleFormatter);\n\n    var _this = possibleConstructorReturn(this, (ConsoleFormatter.__proto__ || Object.getPrototypeOf(ConsoleFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(ConsoleFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(ConsoleFormatter.prototype.__proto__ || Object.getPrototypeOf(ConsoleFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('  ');\n        this.outLine();\n      };\n      context.outLine = function () {\n        this.buffer.push('\\n' + (this.indentPad || ''));\n      };\n      context.out = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        for (var i = 0, l = args.length; i < l; i++) {\n          var lines = args[i].split('\\n');\n          var text = lines.join('\\n' + (this.indentPad || ''));\n          if (this.color && this.color[0]) {\n            text = this.color[0](text);\n          }\n          this.buffer.push(text);\n        }\n      };\n      context.pushColor = function (color) {\n        this.color = this.color || [];\n        this.color.unshift(color);\n      };\n      context.popColor = function () {\n        this.color = this.color || [];\n        this.color.shift();\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.pushColor(colors.error);\n      context.out('[ERROR]' + err);\n      context.popColor();\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out(JSON.stringify(value, null, 2));\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.indent();\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.pushColor(colors.textDiffLine);\n        context.out(line.location.line + ',' + line.location.chr + ' ');\n        context.popColor();\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.pushColor(colors[piece.type]);\n          context.out(piece.text);\n          context.popColor();\n        }\n        if (i < l - 1) {\n          context.outLine();\n        }\n      }\n      context.indent(-1);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.pushColor(colors[type]);\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type, nodeType) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}');\n      }\n      context.popColor();\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.pushColor(colors[type]);\n      context.out(leftKey + ': ');\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}' + (isLast ? '' : ','));\n      }\n      if (!isLast) {\n        context.outLine();\n      }\n      context.popColor();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushColor(colors.deleted);\n      this.formatValue(context, delta[0]);\n      context.popColor();\n      context.out(' => ');\n      context.pushColor(colors.added);\n      this.formatValue(context, delta[1]);\n      context.popColor();\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('==> ' + delta[1]);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      this.formatTextDiffString(context, delta[0]);\n    }\n  }]);\n  return ConsoleFormatter;\n}(BaseFormatter);\n\nvar defaultInstance$3 = void 0;\n\nvar format$3 = function format(delta, left) {\n  if (!defaultInstance$3) {\n    defaultInstance$3 = new ConsoleFormatter();\n  }\n  return defaultInstance$3.format(delta, left);\n};\n\nfunction log$1(delta, left) {\n  console.log(format$3(delta, left));\n}\n\n\n\nvar console$1 = Object.freeze({\n\tdefault: ConsoleFormatter,\n\tformat: format$3,\n\tlog: log$1\n});\n\n\n\nvar index = Object.freeze({\n\tbase: base,\n\thtml: html,\n\tannotated: annotated,\n\tjsonpatch: jsonpatch,\n\tconsole: console$1\n});\n\n// use as 2nd parameter for JSON.parse to revive Date instances\nfunction dateReviver(key, value) {\n  var parts = void 0;\n  if (typeof value === 'string') {\n    // eslint-disable-next-line max-len\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+-])(\\d{2}):(\\d{2}))$/.exec(value);\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n    }\n  }\n  return value;\n}\n\nfunction create(options) {\n  return new DiffPatcher(options);\n}\n\nvar defaultInstance$4 = void 0;\n\nfunction diff() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.diff.apply(defaultInstance$4, arguments);\n}\n\nfunction patch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.patch.apply(defaultInstance$4, arguments);\n}\n\nfunction unpatch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.unpatch.apply(defaultInstance$4, arguments);\n}\n\nfunction reverse() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.reverse.apply(defaultInstance$4, arguments);\n}\n\nfunction clone$1() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.clone.apply(defaultInstance$4, arguments);\n}\n\nexports.DiffPatcher = DiffPatcher;\nexports.formatters = index;\nexports.console = console$1;\nexports.create = create;\nexports.dateReviver = dateReviver;\nexports.diff = diff;\nexports.patch = patch;\nexports.unpatch = unpatch;\nexports.reverse = reverse;\nexports.clone = clone$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DiffPatcher } from \"jsondiffpatch\";\nimport { IdleScheduler } from \"./idle-scheduler\";\nexport var JsonDiffMain = /*#__PURE__*/function () {\n  function JsonDiffMain() {\n    _classCallCheck(this, JsonDiffMain);\n\n    _defineProperty(this, \"diffPatcher\", new DiffPatcher({\n      arrays: {\n        detectMove: false\n      },\n      textDiff: {\n        minLength: 1\n      }\n    }));\n\n    _defineProperty(this, \"scheduler\", new IdleScheduler());\n  }\n\n  _createClass(JsonDiffMain, [{\n    key: \"diff\",\n    value: function () {\n      var _diff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(input) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.scheduler.request();\n\n              case 2:\n                return _context.abrupt(\"return\", {\n                  id: input.id,\n                  delta: this.diffPatcher.diff(input.a, input.b)\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function diff(_x) {\n        return _diff.apply(this, arguments);\n      }\n\n      return diff;\n    }()\n  }]);\n\n  return JsonDiffMain;\n}();"],"sourceRoot":""}