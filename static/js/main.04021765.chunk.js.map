{"version":3,"sources":["serviceWorker.js","index.js","logo.svg"],"names":["Boolean","window","location","hostname","match","require","exampleSetup","buildMenuItems","MenuItem","resizableImage","inline","attrs","src","width","default","alt","title","group","draggable","parseDOM","priority","tag","getAttrs","dom","getAttribute","toDOM","node","style","mySchema","Schema","nodes","marks","schema","spec","FootnoteView","view","getPos","outer","document","createElement","position","display","lineHeight","img","setAttribute","handle","bottom","right","height","border","borderTop","borderLeft","cursor","onmousedown","e","preventDefault","startX","pageX","fontSize","pageY","parseFloat","getComputedStyle","startWidth","onMouseMove","currentX","diffInEm","addEventListener","onMouseUp","removeEventListener","saveThisPos","transaction","state","tr","setNodeMarkup","resolvedPos","doc","resolve","nodeSelection","NodeSelection","setSelection","dispatch","appendChild","this","classList","add","remove","makeImage","options","command","nodeName","selection","type","name","nodeType","image","replaceSelectionWith","create","passedOptions","run","enable","active","prop","makeImageMenuItem","label","menu","blockMenu","push","plugins","menuContent","fullMenu","EditorView","querySelector","EditorState","nodeViews","applyDevTools","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.04021765.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport applyDevTools from \"prosemirror-dev-tools\";\nimport \"./editor.css\";\nimport {addListNodes} from \"prosemirror-schema-list\"\nimport { EditorState,NodeSelection } from \"prosemirror-state\";\nimport {Schema, DOMParser} from \"prosemirror-model\"\nimport { EditorView } from \"prosemirror-view\";\nimport { schema , nodes } from \"prosemirror-schema-basic\";\nconst {exampleSetup, buildMenuItems} = require(\"prosemirror-example-setup\")\n//const {blockTypeItem} = require(\"prosemirror-menu\")\nconst {MenuItem} = require(\"prosemirror-menu\")\n\nconst resizableImage = {\n  inline: true,\n  attrs: {\n    src: {},\n    width: {default: \"10em\"},\n    alt: {default: null},\n    title: {default: null}\n  },\n  group: \"inline\",\n  draggable: true,\n  parseDOM: [{\n    priority: 51, // must be higher than the default image spec\n    tag: \"img[src][width]\", \n    getAttrs(dom) {\n      return {\n        src: dom.getAttribute(\"src\"),\n        title: dom.getAttribute(\"title\"),\n        alt: dom.getAttribute(\"alt\"),\n        width: dom.getAttribute(\"width\")\n      }\n    }\n  }],\n  // TODO if we don't define toDom, something weird happens: dragging the image will not move it but clone it. Why?\n  toDOM(node) {\n    const attrs = {style: `width: ${node.attrs.width}`}\n    return [\"span\", { ...node.attrs, ...attrs }] \n  }\n}\n\nconst mySchema = new Schema({\n  nodes: { ...nodes, resizableImage },\n  marks: schema.spec.marks\n})\n\nfunction getFontSize(element) {\n  return parseFloat(getComputedStyle(element).fontSize);\n}\n\nclass FootnoteView {\n  constructor(node, view, getPos) {    \n    const outer = document.createElement(\"span\")\n    outer.style.position = \"relative\"\n    outer.style.width = node.attrs.width\n    //outer.style.border = \"1px solid blue\"\n    outer.style.display = \"inline-block\"\n    //outer.style.paddingRight = \"0.25em\"\n    outer.style.lineHeight = \"0\"; // necessary so the bottom right arrow is aligned nicely\n    \n    const img = document.createElement(\"img\")\n    img.setAttribute(\"src\", node.attrs.src)\n    img.style.width = \"100%\"\n    //img.style.border = \"1px solid red\"\n    \n    const handle = document.createElement(\"span\")\n    handle.style.position = \"absolute\"\n    handle.style.bottom = \"0px\"\n    handle.style.right = \"0px\"\n    handle.style.width = \"10px\"\n    handle.style.height = \"10px\"\n    handle.style.border = \"3px solid black\"\n    handle.style.borderTop = \"none\"\n    handle.style.borderLeft = \"none\"\n    handle.style.display = \"none\"\n    handle.style.cursor = \"nwse-resize\"\n    \n    handle.onmousedown = function(e) {\n      e.preventDefault()\n      \n      const startX = e.pageX;\n      const startY = e.pageY;\n      \n      const fontSize = getFontSize(outer)\n      \n      const startWidth = parseFloat(node.attrs.width.match(/(.+)em/)[1])\n            \n      const onMouseMove = (e) => {\n        const currentX = e.pageX;\n        const currentY = e.pageY;\n        \n        const diffInPx = currentX - startX\n        const diffInEm = diffInPx / fontSize\n                \n        outer.style.width = `${startWidth + diffInEm}em`\n      }\n      \n      const onMouseUp = (e) => {        \n        e.preventDefault()\n        \n        document.removeEventListener(\"mousemove\", onMouseMove)\n        document.removeEventListener(\"mouseup\", onMouseUp)\n        let saveThisPos = getPos()   \n        let transaction = view.state.tr.setNodeMarkup(getPos(), null, {src: node.attrs.src, width: outer.style.width} )\n        let resolvedPos = transaction.doc.resolve(saveThisPos)\n        let nodeSelection = new NodeSelection(resolvedPos)\n        transaction = transaction.setSelection(nodeSelection);\n        view.dispatch(transaction)\n      }\n      \n      document.addEventListener(\"mousemove\", onMouseMove)\n      document.addEventListener(\"mouseup\", onMouseUp)\n    }\n    \n    outer.appendChild(handle)\n    outer.appendChild(img)\n        \n    this.dom = outer\n    this.img = img\n    this.handle = handle\n  }\n  \n  selectNode() {\n    this.img.classList.add(\"ProseMirror-selectednode\")\n    \n    this.handle.style.display = \"\"\n  }\n\n  deselectNode() {\n    this.img.classList.remove(\"ProseMirror-selectednode\")\n    \n    this.handle.style.display = \"none\"\n  }\n}\n\n// ===============================================================\n\nfunction makeImageMenuItem(options) {\n  let command = (state, dispatch) => {\n    const nodeName = state.selection && state.selection.node && state.selection.node.type.name;\n    \n    if (nodeName === \"image\" || nodeName === \"resizableImage\") {\n      if (dispatch) {\n        const nodeType = nodeName === \"image\" \n          ? mySchema.nodes.resizableImage\n          : mySchema.nodes.image\n        \n        const tr = state.tr.replaceSelectionWith(nodeType.create({src: state.selection.node.attrs.src}))\n\n        dispatch(tr)\n      }\n    \n      return true\n    }\n    \n    return false\n  }\n  \n  let passedOptions = {\n    run: command,\n    enable(state, dispatch) { return command(state, dispatch) },\n    active(state, dispatch) {\n      const nodeName = state.selection && state.selection.node && state.selection.node.type.name;\n      return nodeName === \"resizableImage\"\n    }\n  }\n  \n  for (let prop in options) passedOptions[prop] = options[prop]\n  \n  return new MenuItem(passedOptions)\n}\n\n// ===============================================================\n\nconst makeImage = makeImageMenuItem({ label: \"resizable\" });\n\nconst menu = buildMenuItems(mySchema)\n\nmenu.blockMenu[0].push(makeImage)\n\nconst plugins = exampleSetup({schema: mySchema, menuContent: menu.fullMenu})\n\nconst view = new EditorView(document.querySelector(\"#root\"), {\n  state: EditorState.create({\n    schema:mySchema,\n    plugins\n  }),\n  nodeViews: {\n    resizableImage(node, view, getPos) { return new FootnoteView(node, view, getPos) }\n  }\n})\n\napplyDevTools(view);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}